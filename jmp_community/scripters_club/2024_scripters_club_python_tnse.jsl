Names Default To Here(1);

dt = Open("$SAMPLE_DATA/Iris.jmp");
dt << Clear Row States; // species have been separated so we clear those

// Requires JMP Pro BUT you can do this in Python
obj = dt << Multivariate Embedding(
	Y(:Sepal length, :Sepal width, :Petal length, :Petal width),
	Method("UMAP")
);
obj << Save Embedding Component Values;
obj << close window;


Python Send(dt);
Python Submit("\[
import hdbscan
import jmp
import numpy as np
import pandas as pd

df = pd.DataFrame()
for idx in range(5, 7):
    df[dt[idx].name] = np.array(dt[idx])    

clusterer = hdbscan.HDBSCAN(min_cluster_size=20, min_samples=5, cluster_selection_epsilon=0.1)
cluster_labels = clusterer.fit_predict(df)

df['Clusters'] = cluster_labels
dt.new_column("CLUSTERS", jmp.DataType.Numeric, jmp.ModelingType.Nominal)
dt["CLUSTERS"] = list(df.iloc[:,2])

del df

]\");

// or you could use Python Get
// dt << New Column("CLUSTERS", Numeric, Nominal, Values(Python Get(cluster_labels)));

gb = dt << Graph Builder(
	Size(528, 454),
	Show Control Panel(0),
	Variables(X(:UMAP1), Y(:UMAP2), Color(:CLUSTERS)),
	Elements(Points(X, Y, Legend(3))),
	Column Switcher(:CLUSTERS, {:Species, :CLUSTERS})
);